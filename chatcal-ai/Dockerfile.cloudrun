# Cloud Run Optimized Dockerfile - Multi-stage build for minimal size
FROM python:3.11-slim as builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Production stage - minimal image
FROM python:3.11-slim

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash chatcal
WORKDIR /home/chatcal

# Copy application code
COPY --chown=chatcal:chatcal . .

# Make startup script executable
RUN chmod +x start.sh

# Switch to non-root user
USER chatcal

# Health check for Cloud Run
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Cloud Run expects PORT environment variable - will be set by Cloud Run
# Override Redis URL for Cloud Run (default localhost since no Redis container)
ENV REDIS_URL=redis://localhost:6379/0

# Start application - PORT environment variable handled in main.py
CMD ["python", "-m", "app.api.main"]